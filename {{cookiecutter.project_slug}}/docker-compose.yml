version: '3.7'
networks:
    traefik-public:
        external: true
    internal:
        external: false
services: 
    airflow:
        build:
            context: .
            dockerfile: ./airflow/dockerfile
        command: /scripts/webserver-entrypoint.sh
        deploy:
            labels:
                - "traefik.http.routers.airflow.rule=Host(`airflow.${DOMAIN}`)"
                - "traefik.http.services.airflow.loadbalancer.server.port=8080"
        env_file: .env
        image: airflow
        networks: 
            - internal
        restart: always
    airflow_scheduler:
        build:
            context: .
            dockerfile: airflow/dockerfile
        command: /scripts/scheduler-entrypoint.sh
        env_file: .env
        image: airflow
        networks: 
            - internal
        restart: always
    airflow_worker:
        build:
            context: .
            dockerfile: ./airflow/dockerfile
        command: /scripts/worker-entrypoint.sh
        env_file: .env
        image: airflow
        networks: 
            - internal
        restart: always
    db:
        env_file: .env
        image: postgres:12
        networks: 
            - internal
        restart: always
        volumes: 
            - ./postgres/:/docker-entrypoint-initdb.d/:ro
    flower:
        build: 
            context: flower
            dockerfile: dockerfile
        command: >
            flower 
            --broker=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq/${RABBITMQ_DEFAULT_VHOST}
            --port=5555
        deploy:
            labels:
                - "traefik.http.routers.flower.rule=Host(`flower.${DOMAIN}`)"
                - "traefik.http.services.flower.loadbalancer.server.port=5555"
        env_file: .env
        image: flower
        networks:
            - internal
        restart: always
        ports:
            - 5555:5555
    minio:
        command: server /data
        deploy:
            labels:
                - "traefik.http.routers.minio.rule=Host(`minio.${DOMAIN}`)"
        env_file: .env
        image: minio/minio
        networks: 
            - internal
        restart: always
    mlflow:
        build:
            context: mlflow
            dockerfile: dockerfile
        command: /scripts/entrypoint.sh
        depends_on: 
            - db
        deploy:
            labels:
                - "traefik.http.routers.mlflow.rule=Host(`mlflow.${DOMAIN}`)"
                - "traefik.http.services.mlflow.loadbalancer.server.port=5000"
        env_file: .env
        environment: 
            - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
            - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_KEY}
            - MLFLOW_S3_ENDPOINT_URL=http://minio.${DOMAIN}
        image: mlflow
        networks: 
            - internal
        restart: always
        volumes: 
            - ./mlflow/scripts:/scripts/
    pgadmin:
        env_file: .env
        image: dpage/pgadmin4
        deploy:
            labels:
                - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.${DOMAIN}`)"
        networks: 
            - internal
        restart: always
    proxy:
        image: traefik:v2.2
        volumes: 
            - /var/run/docker.sock:/var/run/docker.sock
        networks: 
            - internal
            - traefik-public
        restart: always
    rabbitmq:
        env_file: .env
        image: rabbitmq
        networks: 
            - internal
        restart: always